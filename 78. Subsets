Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


class Solution 
{
    public List<List<Integer>> subsets(int[] nums) 
    {
        List<List<Integer>> list=new ArrayList<List<Integer>>();
        for( int i=0;i<(1<<nums.length);i++)
        {
            List<Integer> sub=new ArrayList<>();
            for(int j=0;j<nums.length;j++)
            {
                if(((i>>j)&1)==1)
                {
                    sub.add(nums[j]);
                }
            }
            list.add(sub);
        }
        return list;
            
        }
    }


位运算，
i,代表子集的个数，总共有2^n个子集，从前往后第j位和1相与，如果为1，则放入第j个元素。
根本想不出来   :-I
