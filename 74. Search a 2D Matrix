Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.
Example 1:

Input:
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 3
Output: true
Example 2:

Input:
matrix = [
  [1,   3,  5,  7],
  [10, 11, 16, 20],
  [23, 30, 34, 50]
]
target = 13
Output: false



class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix==null||matrix.length==0||matrix[0]==null||matrix[0].length==0){
            return false;
        }
        int row=matrix.length;
        int cols=matrix[0].length;
        int left=0;
        int right=row-1;
        int mid=0;
        while(left+1<right){
            
             mid=left+(right-left)/2;
            if(matrix[mid][0]==target){
                return true;
            }
            else if(matrix[mid][0]<target){
                left=mid;
            }
            else{right=mid;} 
            }
        
        if(matrix[left][0]==target){
            return true;
        }
        if(matrix[left][0]>target){
            return false;
        }
        else if(matrix[left][0]<target&&matrix[right][0]>target){
            mid=left;
        }
        else mid=right;
        int a=mid;
        mid=0;
        left=0;
        right=matrix[0].length-1;
        while(left<=right){
            mid=left+(right-left)/2;
            if(matrix[a][mid]==target){
                return true;
            }
            else if(matrix[a][mid]<target){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
           
        }
       
        return false;
            
       
    }
}
这个题有两种解法，第一种是使用两次binary search ，先找行，再找列。
注意的问题是，
如果循环条件是left+1<right
要考虑的corner case 是如果无法进入循环怎么办，也就是说如果只有一行，此时left+1=right。 这就需要post processing。而且这一种循环要考虑清楚最后的结果是什么，两边夹逼，target可能会在left 这一行，也可能会在right这一行。
如果是left<=right  这种情况是如果有一定会返回true，如果退出循环条件一定是不存在。
