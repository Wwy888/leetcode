Given an array of integers, find if the array contains any duplicates.

Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.

Example 1:

Input: [1,2,3,1]
Output: true
Example 2:

Input: [1,2,3,4]
Output: false
Example 3:

Input: [1,1,1,3,3,4,3,2,4,2]
Output: true


class Solution {
    public boolean containsDuplicate(int[] nums) {
      HashSet<Integer> set=new HashSet<Integer>();
        for(int n:nums)
        {
            if(set.contains(n))
            {
                return true;
            }
            else {
                set.add(n);
            }
            
        }
        return false;
    }
}

利用hash set, 特点是set中的值不能重复， 新建一个空的hashset ， 首先遍历数组nums中的元素，利用。contains()方法，判断是否有相同的元素，
因为是空的hash set，所以要不断添加元素。如果没有，就把元素添加，再遇到相同的元素就能判断是否重复。


class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums);
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]==nums[i+1]){
                return true;
            }
        }
        return false;
    }
}

利用array sort 方法。
