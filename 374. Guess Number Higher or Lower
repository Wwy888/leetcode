We are playing the Guess Game. The game is as follows:

I pick a number from 1 to n. You have to guess which number I picked.

Every time you guess wrong, I'll tell you whether the number is higher or lower.

You call a pre-defined API guess(int num) which returns 3 possible results (-1, 1, or 0):

-1 : My number is lower
 1 : My number is higher
 0 : Congrats! You got it!
Example :

Input: n = 10, pick = 6
Output: 6

/* The guess API is defined in the parent class GuessGame.
   @param num, your guess
   @return -1 if my number is lower, 1 if my number is higher, otherwise return 0
      int guess(int num); */

public class Solution extends GuessGame {
    public int guessNumber(int n) {
        int left=1;
        int right=n;
        while(left<right)
        {
            int mid=left+(right-left)/2;
            int result=guess(mid);
            if(result==1)
            {
                left=mid+1;
            }
            else if(result==-1){
                right=mid;
            }
            else return mid;
        }
        return left;
    }
}

最基本的binary search;
因为随机挑选的数字一定在1，n范围内，所以退出循环的条件是left=right；
进行二分法比较，如果大于mid,left=mid+1;
              如果小于mid,right=mid；
              如果相等，返回mid;
 最后返回left；
              

          
           
