Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

The array may contain duplicates.

Example 1:

Input: [1,3,5]
Output: 1
Example 2:

Input: [2,2,2,0,1]
Output: 0

class Solution {
    public int findMin(int[] nums) {
        int left=0;
        int right=nums.length-1;
        while(left<right){
            int mid=left+(right-left)/2;
            if(nums[mid]==nums[right])
            {
                right--;
            }
            else if(nums[mid]<nums[right]){
                right=mid;
            }
            else{
                left=mid+1;
            }
        }
        return nums[left];
    }
}

方法：
循环条件：题目中最小元素一定存在，当left=right 退出循环
判断中间值和最右边值的大小，三种情况
如果中间值和最右边相等，将右指针向左移动，直到出现不相等为止。
中间值小于最右边，说明右半部分单增或者不减。最小值在左半部分或者是中间值，令right=mid；
中间值大于最右边，最小值在右半部，left=mid+1； 因为存在一个值，比中间值小，中间值一定不是最小值，所以left=mid+1

            
          
